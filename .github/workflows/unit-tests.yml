name: Unit Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  backend-unit-tests:
    name: Backend Unit Tests
    timeout-minutes: 15
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        working-directory: apps/backend
        run: uv sync

      - name: Run unit tests with coverage
        working-directory: apps/backend
        run: |
          PYTHONPATH=. uv run pytest \
            tests/test_security/ \
            tests/test_processing/ \
            tests/test_utils/ \
            tests/test_model_training/test_problem_detector.py \
            tests/test_model_training/test_feature_engineer.py \
            --cov=app \
            --cov-report=xml \
            --cov-report=term-missing \
            -v

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: apps/backend/coverage.xml
          flags: backend-unit
          name: backend-unit-tests
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-unit-coverage
          path: apps/backend/coverage.xml
          retention-days: 30

  frontend-unit-tests:
    name: Frontend Unit Tests
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: apps/frontend/package-lock.json

      - name: Install dependencies
        working-directory: apps/frontend
        run: npm ci

      - name: Run unit tests with coverage
        working-directory: apps/frontend
        run: npm test -- --coverage --watchAll=false
        env:
          CI: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: apps/frontend/coverage/lcov.info
          flags: frontend-unit
          name: frontend-unit-tests
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-unit-coverage
          path: apps/frontend/coverage/
          retention-days: 30
